[build-system]
requires = ["maturin>=1.7,<2.0"]
build-backend = "maturin"

[project]
name = "cupcake"
version = "0.1.0"
description = "Python bindings for Cupcake - governance and augmentation orchestrator for agentic AI"
authors = [
    {name = "Cupcake Contributors"},
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.9"
keywords = ["ai", "governance", "policy", "opa", "rego", "safety", "agents"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS",
    "Operating System :: POSIX :: Linux", 
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Rust",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Security",
]

[project.urls]
"Homepage" = "https://github.com/cupcake/cupcake"
"Bug Reports" = "https://github.com/cupcake/cupcake/issues"
"Source" = "https://github.com/cupcake/cupcake"

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-asyncio>=0.21",
    "black>=23.0",
    "mypy>=1.0",
    "ruff>=0.1",
]

[tool.maturin]
features = ["pyo3/extension-module"]
python-source = "python"
module-name = "cupcake.cupcake_native"
# Build for Python 3.9+ with stable ABI
python-version = "3.9"

[tool.black]
line-length = 88
target-version = ["py39", "py310", "py311", "py312"]

[tool.ruff]
line-length = 88
target-version = "py39"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
asyncio_mode = "auto"