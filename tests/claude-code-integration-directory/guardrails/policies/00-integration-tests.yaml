# Integration Test Policies
# Converted from test-policy.toml for YAML format testing

# Test 1: PreToolUse soft feedback - only visible in transcript
PreToolUse:
  "Bash":
    - name: "Echo Command Transcript Feedback"
      conditions:
        - type: "pattern"
          field: "tool_input.command"
          regex: "^echo\\b"
      action:
        type: "provide_feedback"
        message: "‚ÑπÔ∏è [Transcript Only] Echo command detected - this appears only in transcript mode (Ctrl-R)"
        include_context: false

    # Test 3: PreToolUse hard block - prevents execution
    - name: "Block Dangerous Commands"
      conditions:
        - type: "pattern"
          field: "tool_input.command"
          regex: "^(rm|dd|format)\\s"
      action:
        type: "block_with_feedback"
        feedback_message: "üö´ Dangerous command blocked for safety!"
        include_context: true

    # Test 7: Block cat command usage - suggest using Read tool instead
    - name: "Block Cat Command"
      conditions:
        - type: "pattern"
          field: "tool_input.command"
          regex: "^cat\\s"
      action:
        type: "block_with_feedback"
        feedback_message: "üö´ Use Read tool instead of cat command for better file access control."
        include_context: false

  "Read":
    # Test 5: Read operation tracking (PreToolUse, transcript only)
    - name: "Track Markdown Reads"
      conditions:
        - type: "pattern"
          field: "tool_input.file_path"
          regex: "\\.md$"
      action:
        type: "provide_feedback"
        message: "üìñ [Transcript] Reading markdown file"
        include_context: false

  "Write":
    # Test 6: Block .txt file creation - hard block for testing
    - name: "Block TXT File Creation"
      conditions:
        - type: "pattern"
          field: "tool_input.file_path"
          regex: "\\.txt$"
      action:
        type: "block_with_feedback"
        feedback_message: "üö´ Creating .txt files is not allowed in this test environment!"
        include_context: false

  "Write|Edit":
    # Test 4: PostToolUse feedback for file operations
    - name: "Python File Best Practices"
      conditions:
        - type: "pattern"
          field: "tool_input.file_path"
          regex: "\\.py$"
      action:
        type: "provide_feedback"
        message: "üêç Python file modified. Remember to run black for formatting and mypy for type checking!"
        include_context: false

# Test 2: PostToolUse soft feedback - Claude sees this!
PostToolUse:
  "Bash":
    - name: "Echo Command Claude Feedback"
      conditions:
        - type: "pattern"
          field: "tool_input.command"
          regex: "^echo\\b"
      action:
        type: "provide_feedback"
        message: "üí° Consider using printf instead of echo for better portability across different shells."
        include_context: false